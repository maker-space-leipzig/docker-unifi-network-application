version: "3"
services:
  unifi-db:
    image: docker.io/mongo:3.6
    container_name: unifi-db
    restart: unless-stopped
    hostname: unifi-db
    # environment:
      # MONGO_INITDB_ROOT_USERNAME: root
      # MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - configdb:/data/configdb
      - configdb:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - datadb:/data/db
      - init-mongo:/docker-entrypoint-initdb.d/init-mongo.js:ro
    healthcheck:
      # mongodb >= 6.0
      # test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      # mongodb < 6.0
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s
      
  unifi-network-application:
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: unifi-82
    hostname: unifi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/Berlin
      - MONGO_USER=unifi
      - MONGO_PASS=unifi_pass
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
      - MONGO_TLS= #optional
      - MONGO_AUTHSOURCE= #optional
    volumes:
      - unifi-config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      #- 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: unless-stopped
    depends_on:
      unifi-db: 
        condition: service_healthy

volumes:
  unifi-config: {}
  configdb: {}
  datadb: {}
  init-mongo: {}
